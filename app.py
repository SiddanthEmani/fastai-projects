# AUTOGENERATED! DO NOT EDIT! File to edit: What type of Bear?.ipynb.

# %% auto 0
__all__ = ['categories', 'path', 'learn_inf', 'test_search_images']

# %% What type of Bear?.ipynb 2
from fastbook import search_images_ddg
from fastai.vision.all import *
from fastai.vision.widgets import *
from time import sleep
from fastdownload import download_url
import gradio as gr

# %% What type of Bear?.ipynb 3
categories = ['grizzly bear', 'black bear', 'teddy bear']
path = Path('images/bears')

# %% What type of Bear?.ipynb 15
learn_inf = load_learner(Path()/'export.pkl')

# %% What type of Bear?.ipynb 16
def test_search_images(key):
    try :
        urls = search_images_ddg(key, max_images=1)
        dest = f'images/{key}.jpg'
        download_url(urls[0], dest, show_progress=False)
        image = PILImage.create(dest)
        labels = learn_inf.dls.vocab
        pred,pred_idx,probs = learn_inf.predict(image)
        return [image, {labels[i]: float(probs[i]) for i in range(len(labels))}]
    except Exception as e:
        raise gr.Error("Failed to search! Try again!")
        print(f"Failed to search: {e}")

# %% What type of Bear?.ipynb 17
gr.Interface(
    fn=test_search_images, 
    inputs=[gr.Textbox(label="Search Key")], 
    outputs=[gr.Image(type="pil"),gr.Label(label="Prediction")],
    ).launch(share=True)
